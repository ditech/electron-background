image: node:18.12.1

stages:
  - build
  - release

cache:
  paths:
    - node_modules/

include:
  - project: 'dimensional-innovations/ci-cd'
    ref: master
    file: '/javascript/auth-with-di-package-registry.yml'
  - project: 'dimensional-innovations/ci-cd'
    ref: master
    file: '/javascript/release-package.yml'

build:
  stage: build
  script:
    - yarn build
  artifacts:
    paths:
      - dist/**/*

build_lint:
  stage: build
  script:
    - yarn lint

release_gitlab:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo 'running release_job'
  allow_failure: true
  release:
    name: '$CI_COMMIT_TAG'
    description: 'Created using the release-cli'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'

release_npm_publish:
  stage: release
  only:
    - tags
  image: node:14.18.1
  variables:
    NPM_TOKEN: $NPM_TOKEN
  script:
    - |
      {
        echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'
      } >> .npmrc
    - git config --global user.email ci-cd@dimin.com
    - git config --global user.name "Dimensional Innovations"
    - npm version --no-git-tag-version --new-version $CI_COMMIT_TAG --force --allow-same-version
    - npm publish --access public

release_gitlab_publish:
  stage: release
  only:
    - tags
  image: node:14.18.1
  script:
    - |
      {
        echo '@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_SERVER_PROTOCOL}://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/'
        echo '//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}'
        echo '//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}'
      } >> .npmrc
    - git config --global user.email ci-cd@dimin.com
    - git config --global user.name "Dimensional Innovations"
    - npm version --no-git-tag-version --new-version $CI_COMMIT_TAG --force --allow-same-version
    - npm publish
